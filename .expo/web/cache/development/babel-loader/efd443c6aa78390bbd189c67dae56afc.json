{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar CurrencyConverter = function CurrencyConverter(props) {\n  var _useState = useState(\"java\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState('1'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromValue = _useState4[0],\n      setFromValue = _useState4[1];\n\n  var _useState5 = useState('1'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toValue = _useState6[0],\n      setToValue = _useState6[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Choose the currency and the amounts to get the exchange rate\"), React.createElement(Picker, {\n    selectedValue: selectedValue,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    onChangeText: function (_onChangeText) {\n      function onChangeText(_x) {\n        return _onChangeText.apply(this, arguments);\n      }\n\n      onChangeText.toString = function () {\n        return _onChangeText.toString();\n      };\n\n      return onChangeText;\n    }(function (text) {\n      return onChangeText(text);\n    }),\n    value: fromValue,\n    keyboardType: 'numeric',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"1 CAD = 0.748743 USD\"), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Swap\")), React.createElement(Picker, {\n    selectedValue: selectedValue,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    onChangeText: function (_onChangeText2) {\n      function onChangeText(_x2) {\n        return _onChangeText2.apply(this, arguments);\n      }\n\n      onChangeText.toString = function () {\n        return _onChangeText2.toString();\n      };\n\n      return onChangeText;\n    }(function (text) {\n      return onChangeText(text);\n    }),\n    value: toValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js"],"names":["React","useState","CurrencyConverter","props","selectedValue","setSelectedValue","fromValue","setFromValue","toValue","setToValue","itemValue","itemIndex","text","onChangeText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {View, Picker, Text, TextInput, TouchableOpacity} from 'react-native';\n\nconst CurrencyConverter = (props) => {\n\n    const [selectedValue, setSelectedValue] = useState(\"java\");\n    const [fromValue, setFromValue] = useState('1');\n    const [toValue, setToValue] = useState('1');\n    return (\n        <View>\n            <Text>Choose the currency and the amounts to get the exchange rate</Text>\n            <Picker\n                selectedValue={selectedValue}\n                onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                onChangeText={text => onChangeText(text)}\n                value={fromValue}\n            keyboardType={'numeric'}\n            />\n            <Text>1 CAD = 0.748743 USD</Text>\n            <TouchableOpacity>\n                <Text>Swap</Text>\n            </TouchableOpacity>\n            <Picker\n                selectedValue={selectedValue}\n                onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                onChangeText={text => onChangeText(text)}\n                value={toValue}\n            />\n        </View>\n    );\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}