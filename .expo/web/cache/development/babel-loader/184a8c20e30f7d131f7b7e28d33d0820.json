{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar CurrencyConverter = function CurrencyConverter(props) {\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 24,\n      backgroundColor: \"#eaeaea\",\n      marginBottom: 10,\n      width: \"90%\"\n    },\n    title: {\n      marginTop: 10,\n      color: \"green\",\n      fontSize: 20,\n      fontWeight: \"bold\"\n    },\n    image: {\n      height: 150,\n      width: 250\n    },\n    flexContainer: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      margin: 10\n    },\n    textInput: {\n      textAlign: \"right\"\n    },\n    heading: {\n      textAlign: \"center\"\n    },\n    swapBtn: {\n      backgroundColor: \"green\",\n      padding: 10,\n      borderWidth: 2,\n      borderColor: \"black\",\n      borderRadius: 5\n    },\n    swapText: {\n      color: \"white\"\n    },\n    convertedText: {\n      lineHeight: 40\n    }\n  });\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      apiUnitResponse = _useState2[0],\n      setApiUnitResponse = _useState2[1];\n\n  var _useState3 = useState(\"CAD\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromUnit = _useState4[0],\n      setFromUnit = _useState4[1];\n\n  var _useState5 = useState(\"CAD\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toUnit = _useState6[0],\n      setToUnit = _useState6[1];\n\n  var _useState7 = useState('1'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fromValue = _useState8[0],\n      setFromValue = _useState8[1];\n\n  var _useState9 = useState('1'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toValue = _useState10[0],\n      setToValue = _useState10[1];\n\n  useEffect(function () {\n    fetchDataFromAPI();\n  });\n\n  var calToValue = function calToValue() {\n    var newValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    var value = newValue == undefined ? fromValue : newValue;\n    setToValue((value * apiUnitResponse[toUnit]).toString());\n  };\n\n  var fetchDataFromAPI = function fetchDataFromAPI() {\n    fetch(\"https://api.exchangerate-api.com/v4/latest/\" + fromUnit).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setApiUnitResponse(data.rates);\n      calToValue();\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Choose the currency and the amounts to get the exchange rate\"), React.createElement(View, {\n    style: styles.flexContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker, {\n    selectedValue: fromUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setFromUnit(itemValue);\n      fetchDataFromAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      setFromValue(text);\n      calToValue(parseInt(text));\n    },\n    value: fromValue,\n    keyboardType: 'numeric',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.flexContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.swapBtn,\n    onPress: function onPress() {\n      var tempFromUnit = fromUnit;\n      setFromUnit(toUnit);\n      setToUnit(tempFromUnit);\n      fetchDataFromAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.swapText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Swap\")), React.createElement(Text, {\n    style: styles.convertedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"1 \", fromUnit, \" = \", apiUnitResponse[toUnit], \" \", toUnit)), React.createElement(View, {\n    style: styles.flexContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker, {\n    selectedValue: toUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      console.log(apiUnitResponse[itemValue]);\n      console.log(fromValue);\n      console.log(fromValue * apiUnitResponse[itemValue]);\n      console.log((fromValue * apiUnitResponse[itemValue]).toString());\n      setToUnit(itemValue);\n      calToValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, toValue ? toValue : '0')));\n};\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js"],"names":["React","useState","useEffect","CurrencyConverter","props","styles","StyleSheet","create","container","flex","padding","backgroundColor","marginBottom","width","title","marginTop","color","fontSize","fontWeight","image","height","flexContainer","display","flexDirection","justifyContent","margin","textInput","textAlign","heading","swapBtn","borderWidth","borderColor","borderRadius","swapText","convertedText","lineHeight","apiUnitResponse","setApiUnitResponse","fromUnit","setFromUnit","toUnit","setToUnit","fromValue","setFromValue","toValue","setToValue","fetchDataFromAPI","calToValue","newValue","undefined","value","toString","fetch","then","response","json","data","rates","itemValue","itemIndex","text","parseInt","tempFromUnit","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {View, Picker, Text, TextInput, TouchableOpacity, StyleSheet} from 'react-native';\n\nconst CurrencyConverter = (props) => {\n    const styles = StyleSheet.create({\n        container: {\n          flex: 1,\n          padding: 24,\n        //   alignItems: \"center\",\n          backgroundColor: \"#eaeaea\",\n          marginBottom: 10,\n          width: \"90%\"\n        },\n        title: {\n          marginTop: 10,\n          color: \"green\",\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        image:{\n          height: 150,\n          width: 250,\n        },\n        flexContainer: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            margin: 10\n\n        },\n        textInput: {\n            textAlign: \"right\",\n            \n        },\n        heading:{\n            textAlign: \"center\"\n        },\n        swapBtn: {\n            backgroundColor: \"green\",\n            padding:10,\n            borderWidth:2,\n            borderColor: \"black\",\n            borderRadius: 5,\n        },\n        swapText: {\n            color: \"white\"\n        },convertedText:{\n            lineHeight: 40\n        }\n      });\n    const [apiUnitResponse, setApiUnitResponse] = useState({});\n    const [fromUnit, setFromUnit] = useState(\"CAD\");\n    const [toUnit, setToUnit] = useState(\"CAD\");\n    const [fromValue, setFromValue] = useState('1');\n    const [toValue, setToValue] = useState('1');\n\n    useEffect(()=>{\n        fetchDataFromAPI();\n    });\n\n    const calToValue = (newValue = undefined) => {\n        let value = newValue == undefined ? fromValue : newValue;\n        setToValue((value * apiUnitResponse[toUnit]).toString());\n    }\n\n    const fetchDataFromAPI = () => {\n        fetch(`https://api.exchangerate-api.com/v4/latest/${fromUnit}`)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            setApiUnitResponse(data.rates);\n            calToValue();\n        })\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.heading}>Choose the currency and the amounts to get the exchange rate</Text>\n            <View style={styles.flexContainer}>\n            <Picker\n                selectedValue={fromUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    setFromUnit(itemValue);\n                    fetchDataFromAPI();\n                    // calToValue();\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                style= {styles.textInput}\n                onChangeText={text => {\n                    setFromValue(text);\n                    calToValue(parseInt(text))\n                    \n                }}\n                value={fromValue}\n                keyboardType={'numeric'}\n            />\n            </View>\n            <View style={styles.flexContainer}>\n            <TouchableOpacity \n                style={styles.swapBtn}\n                onPress={()=>{\n                let tempFromUnit = fromUnit;\n                setFromUnit(toUnit);\n                setToUnit(tempFromUnit);\n                fetchDataFromAPI();\n            }}>\n                <Text style={styles.swapText}>Swap</Text>\n            </TouchableOpacity>\n            <Text style={styles.convertedText}>1 {fromUnit} = {apiUnitResponse[toUnit]} {toUnit}</Text>\n            </View>\n            <View style={styles.flexContainer}>\n            <Picker\n                selectedValue={toUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    console.log(apiUnitResponse[itemValue]);\n                    console.log(fromValue);\n                    console.log(fromValue * apiUnitResponse[itemValue]);\n                    console.log((fromValue * apiUnitResponse[itemValue]).toString());\n                    setToUnit(itemValue);\n                    calToValue();\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <Text>{toValue ? toValue : '0'}</Text>\n            </View>\n        </View>\n    );\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}