{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar CurrencyConverter = function CurrencyConverter(props) {\n  var _useState = useState(\"CAD\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      fromUnit = _useState2[0],\n      setFromUnit = _useState2[1];\n\n  var _useState3 = useState(\"CAD\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toUnit = _useState4[0],\n      setToUnit = _useState4[1];\n\n  var _useState5 = useState('1'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fromValue = _useState6[0],\n      setFromValue = _useState6[1];\n\n  var _useState7 = useState('1'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toValue = _useState8[0],\n      setToValue = _useState8[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Choose the currency and the amounts to get the exchange rate\"), React.createElement(Picker, {\n    selectedValue: fromUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      fetch(\"https://api.exchangerate-api.com/v4/latest/\" + itemValue).then(function (response) {\n        console.log(response.body);\n      });\n      setFromUnit(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setFromValue(text);\n    },\n    value: fromValue,\n    keyboardType: 'numeric',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"1 CAD = 0.748743 USD\"), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Swap\")), React.createElement(Picker, {\n    selectedValue: toUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setToUnit(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setToValue(text);\n    },\n    value: toValue,\n    keyboardType: 'numeric',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js"],"names":["React","useState","CurrencyConverter","props","fromUnit","setFromUnit","toUnit","setToUnit","fromValue","setFromValue","toValue","setToValue","itemValue","itemIndex","fetch","then","response","console","log","body","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {View, Picker, Text, TextInput, TouchableOpacity} from 'react-native';\n\nconst CurrencyConverter = (props) => {\n\n    const [fromUnit, setFromUnit] = useState(\"CAD\");\n    const [toUnit, setToUnit] = useState(\"CAD\");\n    const [fromValue, setFromValue] = useState('1');\n    const [toValue, setToValue] = useState('1');\n    return (\n        <View>\n            <Text>Choose the currency and the amounts to get the exchange rate</Text>\n            <Picker\n                selectedValue={fromUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    fetch(`https://api.exchangerate-api.com/v4/latest/${itemValue}`)\n                    .then((response) => {\n                        console.log(response.body);\n                    })\n                    setFromUnit(itemValue);\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                onChangeText={text => setFromValue(text)}\n                value={fromValue}\n                keyboardType={'numeric'}\n            />\n            <Text>1 CAD = 0.748743 USD</Text>\n            <TouchableOpacity>\n                <Text>Swap</Text>\n            </TouchableOpacity>\n            <Picker\n                selectedValue={toUnit}\n                onValueChange={(itemValue, itemIndex) => setToUnit(itemValue)}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                onChangeText={text => setToValue(text)}\n                value={toValue}\n                keyboardType={'numeric'}\n            />\n        </View>\n    );\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}