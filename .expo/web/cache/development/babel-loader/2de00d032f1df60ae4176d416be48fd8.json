{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar CurrencyConverter = function CurrencyConverter(props) {\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 24,\n      alignItems: \"center\",\n      backgroundColor: \"#eaeaea\",\n      marginBottom: 10\n    },\n    title: {\n      width: \"50%\",\n      marginTop: 10,\n      color: \"green\",\n      fontSize: 20,\n      fontWeight: \"bold\"\n    },\n    image: {\n      height: 150,\n      width: 250\n    }\n  });\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      apiUnitResponse = _useState2[0],\n      setApiUnitResponse = _useState2[1];\n\n  var _useState3 = useState(\"CAD\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromUnit = _useState4[0],\n      setFromUnit = _useState4[1];\n\n  var _useState5 = useState(\"CAD\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toUnit = _useState6[0],\n      setToUnit = _useState6[1];\n\n  var _useState7 = useState('1'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fromValue = _useState8[0],\n      setFromValue = _useState8[1];\n\n  var _useState9 = useState('1'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toValue = _useState10[0],\n      setToValue = _useState10[1];\n\n  useEffect(function () {\n    fetchDataFromAPI();\n  });\n\n  var calToValue = function calToValue() {\n    var newValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    var value = newValue == undefined ? fromValue : newValue;\n    setToValue((value * apiUnitResponse[toUnit]).toString());\n  };\n\n  var fetchDataFromAPI = function fetchDataFromAPI() {\n    fetch(\"https://api.exchangerate-api.com/v4/latest/\" + fromUnit).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setApiUnitResponse(data.rates);\n      calToValue();\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Choose the currency and the amounts to get the exchange rate\"), React.createElement(Picker, {\n    selectedValue: fromUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setFromUnit(itemValue);\n      fetchDataFromAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      setFromValue(text);\n      calToValue(parseInt(text));\n    },\n    value: fromValue,\n    keyboardType: 'numeric',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      var tempFromUnit = fromUnit;\n      setFromUnit(toUnit);\n      setToUnit(tempFromUnit);\n      fetchDataFromAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Swap\")), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"1 \", fromUnit, \" = \", apiUnitResponse[toUnit], \" \", toUnit), React.createElement(Picker, {\n    selectedValue: toUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      console.log(apiUnitResponse[itemValue]);\n      console.log(fromValue);\n      console.log(fromValue * apiUnitResponse[itemValue]);\n      console.log((fromValue * apiUnitResponse[itemValue]).toString());\n      setToUnit(itemValue);\n      calToValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, toValue ? toValue : '0'));\n};\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js"],"names":["React","useState","useEffect","CurrencyConverter","props","styles","StyleSheet","create","container","flex","padding","alignItems","backgroundColor","marginBottom","title","width","marginTop","color","fontSize","fontWeight","image","height","apiUnitResponse","setApiUnitResponse","fromUnit","setFromUnit","toUnit","setToUnit","fromValue","setFromValue","toValue","setToValue","fetchDataFromAPI","calToValue","newValue","undefined","value","toString","fetch","then","response","json","data","rates","itemValue","itemIndex","text","parseInt","tempFromUnit","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {View, Picker, Text, TextInput, TouchableOpacity, StyleSheet} from 'react-native';\n\nconst CurrencyConverter = (props) => {\n    const styles = StyleSheet.create({\n        container: {\n          flex: 1,\n          padding: 24,\n          alignItems: \"center\",\n          backgroundColor: \"#eaeaea\",\n          marginBottom: 10,\n          \n        },\n        title: {\n        width:\"50%\",\n          marginTop: 10,\n          color: \"green\",\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        image:{\n          height: 150,\n          width: 250,\n        }\n      });\n    const [apiUnitResponse, setApiUnitResponse] = useState({});\n    const [fromUnit, setFromUnit] = useState(\"CAD\");\n    const [toUnit, setToUnit] = useState(\"CAD\");\n    const [fromValue, setFromValue] = useState('1');\n    const [toValue, setToValue] = useState('1');\n\n    useEffect(()=>{\n        fetchDataFromAPI();\n    });\n\n    const calToValue = (newValue = undefined) => {\n        let value = newValue == undefined ? fromValue : newValue;\n        setToValue((value * apiUnitResponse[toUnit]).toString());\n    }\n\n    const fetchDataFromAPI = () => {\n        fetch(`https://api.exchangerate-api.com/v4/latest/${fromUnit}`)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            setApiUnitResponse(data.rates);\n            calToValue();\n        })\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text >Choose the currency and the amounts to get the exchange rate</Text>\n            {/* <View style={styles.fromContainer}> */}\n            <Picker\n                selectedValue={fromUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    setFromUnit(itemValue);\n                    fetchDataFromAPI();\n                    // calToValue();\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                onChangeText={text => {\n                    setFromValue(text);\n                    calToValue(parseInt(text))\n                    \n                }}\n                value={fromValue}\n                keyboardType={'numeric'}\n            />\n            {/* </View>\n            <View style={styles.swapContainer}> */}\n            <TouchableOpacity onPress={()=>{\n                let tempFromUnit = fromUnit;\n                setFromUnit(toUnit);\n                setToUnit(tempFromUnit);\n                fetchDataFromAPI();\n            }}>\n                <Text>Swap</Text>\n            </TouchableOpacity>\n            <Text>1 {fromUnit} = {apiUnitResponse[toUnit]} {toUnit}</Text>\n            {/* </View>\n            <View style={styles.toContainer}> */}\n            <Picker\n                selectedValue={toUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    console.log(apiUnitResponse[itemValue]);\n                    console.log(fromValue);\n                    console.log(fromValue * apiUnitResponse[itemValue]);\n                    console.log((fromValue * apiUnitResponse[itemValue]).toString());\n                    setToUnit(itemValue);\n                    calToValue();\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <Text>{toValue ? toValue : '0'}</Text>\n            {/* </View> */}\n        </View>\n    );\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}