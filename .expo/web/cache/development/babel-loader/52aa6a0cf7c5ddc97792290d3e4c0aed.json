{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar CurrencyConverter = function CurrencyConverter(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      apiUnitResponse = _useState2[0],\n      setApiUnitResponse = _useState2[1];\n\n  var _useState3 = useState(\"CAD\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromUnit = _useState4[0],\n      setFromUnit = _useState4[1];\n\n  var _useState5 = useState(\"CAD\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toUnit = _useState6[0],\n      setToUnit = _useState6[1];\n\n  var _useState7 = useState('1'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fromValue = _useState8[0],\n      setFromValue = _useState8[1];\n\n  var _useState9 = useState('1'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toValue = _useState10[0],\n      setToValue = _useState10[1];\n\n  useEffect(function () {\n    fetch(\"https://api.exchangerate-api.com/v4/latest/\" + fromUnit).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setApiUnitResponse(data.rates);\n    });\n  });\n\n  var calToValue = function calToValue() {\n    setToValue((fromValue * apiUnitResponse[toUnit]).toString());\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Choose the currency and the amounts to get the exchange rate\"), React.createElement(Picker, {\n    selectedValue: fromUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setFromUnit(itemValue);\n      fetch(\"https://api.exchangerate-api.com/v4/latest/\" + itemValue).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setApiUnitResponse(data.rates);\n      });\n      setFromUnit(itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setFromValue(text);\n    },\n    value: fromValue,\n    keyboardType: 'numeric',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"1 CAD = 0.748743 USD\"), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Swap\")), React.createElement(Picker, {\n    selectedValue: toUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      console.log(apiUnitResponse[itemValue]);\n      console.log(fromValue);\n      console.log(fromValue * apiUnitResponse[itemValue]);\n      console.log((fromValue * apiUnitResponse[itemValue]).toString());\n      setToUnit(itemValue);\n      calToValue();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, toValue));\n};\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js"],"names":["React","useState","useEffect","CurrencyConverter","props","apiUnitResponse","setApiUnitResponse","fromUnit","setFromUnit","toUnit","setToUnit","fromValue","setFromValue","toValue","setToValue","fetch","then","response","json","data","rates","calToValue","toString","itemValue","itemIndex","text","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {View, Picker, Text, TextInput, TouchableOpacity} from 'react-native';\n\nconst CurrencyConverter = (props) => {\n\n    const [apiUnitResponse, setApiUnitResponse] = useState({});\n    const [fromUnit, setFromUnit] = useState(\"CAD\");\n    const [toUnit, setToUnit] = useState(\"CAD\");\n    const [fromValue, setFromValue] = useState('1');\n    const [toValue, setToValue] = useState('1');\n\n    useEffect(()=>{\n        fetch(`https://api.exchangerate-api.com/v4/latest/${fromUnit}`)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            setApiUnitResponse(data.rates);\n        })\n    });\n\n    const calToValue = () => {\n        setToValue((fromValue * apiUnitResponse[toUnit]).toString());\n    }\n\n    return (\n        <View>\n            <Text>Choose the currency and the amounts to get the exchange rate</Text>\n            <Picker\n                selectedValue={fromUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    setFromUnit(itemValue);\n                    fetch(`https://api.exchangerate-api.com/v4/latest/${itemValue}`)\n                    .then((response) => {\n                        return response.json();\n                    })\n                    .then((data) => {\n                        setApiUnitResponse(data.rates);\n                    })\n                    setFromUnit(itemValue);\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                onChangeText={text => setFromValue(text)}\n                value={fromValue}\n                keyboardType={'numeric'}\n            />\n            <Text>1 CAD = 0.748743 USD</Text>\n            <TouchableOpacity>\n                <Text>Swap</Text>\n            </TouchableOpacity>\n            <Picker\n                selectedValue={toUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    console.log(apiUnitResponse[itemValue]);\n                    console.log(fromValue);\n                    console.log(fromValue * apiUnitResponse[itemValue]);\n                    console.log((fromValue * apiUnitResponse[itemValue]).toString());\n                    setToUnit(itemValue);\n                    calToValue();\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <Text>{toValue}</Text>\n        </View>\n    );\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}