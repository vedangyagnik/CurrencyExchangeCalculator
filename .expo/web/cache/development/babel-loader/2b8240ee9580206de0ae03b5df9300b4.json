{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar CurrencyConverter = function CurrencyConverter(props) {\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 10,\n      backgroundColor: \"#eaeaea\",\n      marginBottom: 10,\n      width: Platform.os == \"web\" ? \"10%\" : \"100%\"\n    },\n    flexContainer: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      margin: 10\n    },\n    textInput: {\n      textAlign: \"right\",\n      height: 50,\n      width: 100\n    },\n    heading: {\n      textAlign: \"center\",\n      fontSize: 12\n    },\n    swapBtn: {\n      backgroundColor: \"green\",\n      padding: 10,\n      borderWidth: 2,\n      borderColor: \"black\",\n      borderRadius: 5\n    },\n    swapText: {\n      color: \"white\"\n    },\n    convertedText: {\n      lineHeight: 40,\n      color: \"green\"\n    },\n    picker: {\n      padding: 5,\n      height: 50,\n      width: 100,\n      backgroundColor: \"white\",\n      borderWidth: 1,\n      borderColor: \"grey\",\n      color: \"grey\"\n    }\n  });\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      apiUnitResponse = _useState2[0],\n      setApiUnitResponse = _useState2[1];\n\n  var _useState3 = useState(\"CAD\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fromUnit = _useState4[0],\n      setFromUnit = _useState4[1];\n\n  var _useState5 = useState(\"CAD\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      toUnit = _useState6[0],\n      setToUnit = _useState6[1];\n\n  var _useState7 = useState('1'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fromValue = _useState8[0],\n      setFromValue = _useState8[1];\n\n  var _useState9 = useState('1'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      toValue = _useState10[0],\n      setToValue = _useState10[1];\n\n  useEffect(function () {\n    fetchDataFromAPI();\n  }, [toValue, fromValue, toUnit, fromUnit]);\n\n  var calToValue = function calToValue() {\n    var newValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n    var newAPIUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    var newToUnit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var fromVal = newValue == undefined ? fromValue : newValue;\n    var apiUnitVal = newAPIUnit == undefined ? apiUnitResponse : newAPIUnit;\n    var toUnitVal = newToUnit == undefined ? toUnit : newToUnit;\n    setToValue((fromVal * apiUnitVal[toUnitVal]).toFixed(2).toString());\n  };\n\n  var fetchDataFromAPI = function fetchDataFromAPI() {\n    fetch(\"https://api.exchangerate-api.com/v4/latest/\" + fromUnit).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setApiUnitResponse(data.rates);\n      calToValue(undefined, data.rates);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Choose the currency and the amounts to get the exchange rate\"), React.createElement(View, {\n    style: styles.flexContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: fromUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setFromUnit(itemValue);\n      fetchDataFromAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), React.createElement(TextInput, {\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      setFromValue(text);\n      calToValue(parseInt(text));\n    },\n    value: fromValue,\n    keyboardType: 'numeric',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.flexContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.swapBtn,\n    onPress: function onPress() {\n      var tempFromUnit = fromUnit;\n      setFromUnit(toUnit);\n      setToUnit(tempFromUnit);\n      fetchDataFromAPI();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.swapText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Swap\")), React.createElement(Text, {\n    style: styles.convertedText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"1 \", fromUnit, \" = \", apiUnitResponse[toUnit], \" \", toUnit)), React.createElement(View, {\n    style: styles.flexContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: toUnit,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setToUnit(itemValue);\n      calToValue(undefined, undefined, itemValue);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"CAD\",\n    value: \"CAD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"USD\",\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"EUR\",\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"GBP\",\n    value: \"GBP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, toValue ? toValue : '0')));\n};\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/vedang/Desktop/react-native/firstNativeProject/CurrencyConverter.js"],"names":["React","useState","useEffect","CurrencyConverter","props","styles","StyleSheet","create","container","flex","padding","backgroundColor","marginBottom","width","Platform","os","flexContainer","display","flexDirection","justifyContent","margin","textInput","textAlign","height","heading","fontSize","swapBtn","borderWidth","borderColor","borderRadius","swapText","color","convertedText","lineHeight","picker","apiUnitResponse","setApiUnitResponse","fromUnit","setFromUnit","toUnit","setToUnit","fromValue","setFromValue","toValue","setToValue","fetchDataFromAPI","calToValue","newValue","undefined","newAPIUnit","newToUnit","fromVal","apiUnitVal","toUnitVal","toFixed","toString","fetch","then","response","json","data","rates","itemValue","itemIndex","text","parseInt","tempFromUnit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport {View, Picker, Text, TextInput, TouchableOpacity, StyleSheet, Platform} from 'react-native';\n\nconst CurrencyConverter = (props) => {\n    const styles = StyleSheet.create({\n        container: {\n          flex: 1,\n          padding: 10,\n          backgroundColor: \"#eaeaea\",\n          marginBottom: 10,\n          width: (Platform.os == \"web\") ? \"10%\" : \"100%\"\n        },\n        \n        flexContainer: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            margin: 10\n\n        },\n        textInput: {\n            textAlign: \"right\",\n            height: 50,\n            width: 100,\n        },\n        heading:{\n            textAlign: \"center\",\n            fontSize: 12\n        },\n        swapBtn: {\n            backgroundColor: \"green\",\n            padding:10,\n            borderWidth:2,\n            borderColor: \"black\",\n            borderRadius: 5,\n        },\n        swapText: {\n            color: \"white\"\n        },convertedText:{\n            lineHeight: 40,\n            color: \"green\"\n        },\n        picker: {\n            padding: 5,\n            height: 50,\n            width: 100,\n            backgroundColor: \"white\",\n            borderWidth: 1,\n            borderColor: \"grey\",\n            color: \"grey\"\n        }\n      });\n    const [apiUnitResponse, setApiUnitResponse] = useState({});\n    const [fromUnit, setFromUnit] = useState(\"CAD\");\n    const [toUnit, setToUnit] = useState(\"CAD\");\n    const [fromValue, setFromValue] = useState('1');\n    const [toValue, setToValue] = useState('1');\n\n    useEffect(() => {\n        fetchDataFromAPI();\n      }, [toValue, fromValue, toUnit, fromUnit]);\n      \n\n    const calToValue = (newValue = undefined, newAPIUnit = undefined, newToUnit = undefined) => {\n        let fromVal = newValue == undefined ? fromValue : newValue;\n        let apiUnitVal = newAPIUnit == undefined ? apiUnitResponse  : newAPIUnit;\n        let toUnitVal = newToUnit == undefined ? toUnit : newToUnit;\n        setToValue(((fromVal * apiUnitVal[toUnitVal]).toFixed(2)).toString());\n    }\n\n    const fetchDataFromAPI = () => {\n        fetch(`https://api.exchangerate-api.com/v4/latest/${fromUnit}`)\n        .then((response) => {\n            return response.json();\n        })\n        .then((data) => {\n            setApiUnitResponse(data.rates);\n            calToValue(undefined, data.rates);\n        })\n    }\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.heading}>Choose the currency and the amounts to get the exchange rate</Text>\n            <View style={styles.flexContainer}>\n            <Picker\n                style={styles.picker}\n                selectedValue={fromUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    setFromUnit(itemValue);\n                    fetchDataFromAPI();\n                    // calToValue();\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <TextInput\n                style= {styles.textInput}\n                onChangeText={text => {\n                    setFromValue(text);\n                    calToValue(parseInt(text))\n                    \n                }}\n                value={fromValue}\n                keyboardType={'numeric'}\n            />\n            </View>\n            <View style={styles.flexContainer}>\n            <TouchableOpacity \n                style={styles.swapBtn}\n                onPress={()=>{\n                let tempFromUnit = fromUnit;\n                setFromUnit(toUnit);\n                setToUnit(tempFromUnit);\n                fetchDataFromAPI();\n            }}>\n                <Text style={styles.swapText}>Swap</Text>\n            </TouchableOpacity>\n            <Text style={styles.convertedText}>1 {fromUnit} = {apiUnitResponse[toUnit]} {toUnit}</Text>\n            </View>\n            <View style={styles.flexContainer}>\n            <Picker\n            style={styles.picker}\n                selectedValue={toUnit}\n                onValueChange={(itemValue, itemIndex) => {\n                    setToUnit(itemValue);\n                    calToValue(undefined, undefined, itemValue);\n                }}\n            >\n                <Picker.Item label=\"CAD\" value=\"CAD\" />\n                <Picker.Item label=\"USD\" value=\"USD\" />\n                <Picker.Item label=\"EUR\" value=\"EUR\" />\n                <Picker.Item label=\"GBP\" value=\"GBP\" />\n            </Picker>\n            <Text>{toValue ? toValue : '0'}</Text>\n            </View>\n        </View>\n    );\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}